# Generated by Django 5.1.3 on 2024-12-14 05:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("website", "0169_dailystatusreport_current_mood_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="project",
            name="activity_status",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="project",
            name="is_github_repo",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="project",
            name="project_label",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="project",
            name="project_type",
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.CreateModel(
            name="AdditionalRepo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField()),
                ("description", models.TextField()),
                ("github_url", models.URLField()),
                ("wiki_url", models.URLField(blank=True, null=True)),
                ("homepage_url", models.URLField(blank=True, null=True)),
                ("logo_url", models.URLField()),
                ("stars", models.IntegerField(default=0)),
                ("forks", models.IntegerField(default=0)),
                ("contributor_count", models.IntegerField(default=0)),
                (
                    "release_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("release_datetime", models.DateTimeField(blank=True, null=True)),
                ("external_links", models.JSONField(blank=True, default=list)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("last_updated", models.DateTimeField(blank=True, null=True)),
                ("total_issues", models.IntegerField(default=0)),
                ("repo_visit_count", models.IntegerField(default=0)),
                ("project_visit_count", models.IntegerField(default=0)),
                ("watchers", models.IntegerField(default=0)),
                ("open_pull_requests", models.IntegerField(default=0)),
                (
                    "primary_language",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("license", models.CharField(blank=True, max_length=100, null=True)),
                ("last_commit_date", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("network_count", models.IntegerField(default=0)),
                ("subscribers_count", models.IntegerField(default=0)),
                ("open_issues", models.IntegerField(default=0)),
                ("closed_issues", models.IntegerField(default=0)),
                ("size", models.IntegerField(default=0)),
                ("commit_count", models.IntegerField(default=0)),
                (
                    "contributors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="additional_repos",
                        to="website.contributor",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_repos",
                        to="website.project",
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="website.tag")),
            ],
        ),
    ]
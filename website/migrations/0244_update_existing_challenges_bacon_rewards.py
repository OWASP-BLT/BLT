# Generated by Django 5.1.8 on 2025-07-21 21:01

from django.db import migrations


def update_challenge_bacon_rewards(apps, schema_editor):
    """Update existing challenges with appropriate bacon rewards"""
    Challenge = apps.get_model("website", "Challenge")

    # Define bacon rewards for different challenges
    challenge_rewards = {
        "Report 5 IPs": 10,
        "Report 5 Issues": 15,
        "Sign in for 5 Days": 5,
        "Report 10 IPs": 20,
        "Report 10 Issues": 25,
        "All Members Sign in for 5 Days": 10,
    }

    # Update existing challenges
    for challenge_title, bacon_reward in challenge_rewards.items():
        try:
            challenge = Challenge.objects.get(title=challenge_title)
            challenge.bacon_reward = bacon_reward
            challenge.save()
            print(f"Updated challenge '{challenge_title}' with {bacon_reward} bacon reward")
        except Challenge.DoesNotExist:
            print(f"Challenge '{challenge_title}' not found, skipping...")


def reverse_update_challenge_bacon_rewards(apps, schema_editor):
    """Reverse operation - reset bacon_reward to default value"""
    Challenge = apps.get_model("website", "Challenge")
    Challenge.objects.all().update(bacon_reward=5)


class Migration(migrations.Migration):
    dependencies = [
        ("website", "0243_add_bacon_reward_to_challenge"),
    ]

    operations = [
        migrations.RunPython(
            update_challenge_bacon_rewards,
            reverse_update_challenge_bacon_rewards,
        ),
    ]

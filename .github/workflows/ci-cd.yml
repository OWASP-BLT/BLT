name: CI/CD Optimized
on:
  #merge_group:
  pull_request:
  push:
  workflow_dispatch:
  workflow_run:
    workflows: ["Pre-commit fix"]
    types:
      - completed
env:
  FORCE_COLOR: 1
  UV_CACHE_DIR: ~/.cache/uv

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  setup:
    name: Setup and Cache Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      uv-cache-dir: ${{ steps.uv-cache.outputs.dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.2

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Get uv cache directory
        id: uv-cache
        run: echo "dir=${{ env.UV_CACHE_DIR }}" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: uv sync --dev

      - name: Print memory usage
        run: free -h

  pre-commit:
    name: Run pre-commit
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - uses: actions/setup-python@v5
        with:
          python-version: 3.11.2

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

      - name: Print memory usage
        run: free -h

  test:
    name: Run Tests
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
      contents: write
      actions: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.11.2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb chromium-browser chromium-chromedriver

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: uv sync --dev

      - name: Collect static files
        run: uv run python manage.py collectstatic --noinput

      - name: Run tests
        run: uv run xvfb-run --auto-servernum python manage.py test -v 3 --failfast

  docker-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        run: |
          docker --version
          curl -sSL https://github.com/docker/compose/releases/download/v2.17.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build Docker image
        run: |
          docker build -t my-app .

      - name: Run Docker container
        run: |
          docker run -d --name my-container my-app

      - name: Install dependencies in container
        run: docker exec my-container uv sync --no-dev

      - name: Clean up
        run: |
          docker stop my-container
          docker rm my-container

      - name: Print memory usage
        run: free -h
